---
title: "Sim race Austria 2022"
---

```{r}
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(plotly)
library(tidyr)
library(kableExtra)
library(DT)
```

```{r}
df <- read.csv("data/simrace analyse.csv") %>%
  mutate(laptime = minute(parse_date_time(laptime, "%M:%OS")) * 60 + second(parse_date_time(laptime, "%M:%OS")),
         Sector_1 = minute(parse_date_time(Sector_1, "%M:%OS")) * 60 + second(parse_date_time(Sector_1, "%M:%OS")),
         Sector_2 = minute(parse_date_time(Sector_2, "%M:%OS")) * 60 + second(parse_date_time(Sector_2, "%M:%OS")),
         Sector_3 = minute(parse_date_time(Sector_3, "%M:%OS")) * 60 + second(parse_date_time(Sector_3, "%M:%OS"))) %>%
  group_by(driver) %>%
  mutate(round = max(round) - round + 1) %>%
  arrange(driver,round) %>%
  ungroup()
```

```{r}
df  %>%
   group_by(driver) %>%
  arrange(desc(laptime)) %>%
  select(-track, -competition, -date) %>%
  datatable(filter= 'top')
```

# Race

## Laptimes per driver

```{r}
#| label: tbl-descriptive-stats
#| tbl-cap: "Mean and median laptimes per driver"
#| tbl-column: margin
df %>%
group_by(driver) %>%
summarise(mean_laptime = mean(laptime), median_laptime=median(laptime)) %>%
kable(col.names = c("Driver", "Mean laptime", "Median laptime"))
```

```{r}
#| label: fig-ridge-laptimes
#| fig-cap: "Distribution of laptimes per driver"
library(ggridges)
df %>%
  group_by(driver) %>%
  arrange(desc(laptime)) %>%
  filter(row_number() <= 6, laptime <= 120) %>%
  ggplot(aes(x = laptime, y = driver)) +
  geom_density_ridges()
```

```{r}
#| label: fig-sector-times
#| fig-cap: "Sector times per driver"
df %>%
  group_by(driver) %>%
  arrange(desc(laptime)) %>%
  filter(row_number() <= 6, laptime <= 120) %>%
  pivot_longer(c("Sector_1", "Sector_2", "Sector_3")) %>%
  ggplot(aes(x = value, y = driver, group = interaction(driver, name), fill=name)) +
  geom_density_ridges()
```


```{r}
#| label: fig-driver-variance
#| fig-cap: "Laptime variance per driver (excluding laptimes over 2 minutes)"
df %>%
  group_by(driver) %>%
  arrange(desc(laptime)) %>%
  filter(row_number() <= 6, laptime <= 120) %>%
  group_by(driver) %>%
  summarise(var = var(laptime)) %>%
  arrange(var) %>%
  ggplot() +
  geom_bar(aes(x = reorder(driver, var), y = var), stat = "identity") +
  labs(x = "Driver", y = "Variance")
```

## Race evolution

```{r}
#| label: fig-race-evolution
#| fig-cap: "Evolution of time to lead during the race"
df %>%
  group_by(driver) %>%
  mutate(cumulative_laptime = cumsum(laptime)) %>%
  group_by(round) %>%
  mutate(time_to_lead = cumulative_laptime - min(cumulative_laptime)) %>%
  ungroup() %>%
  ggplot() +
  geom_line(aes(x = round, y = time_to_lead, color = driver)) -> p
ggplotly(p)
```

```{r}
#| label: fig-laptime-evolution
#| fig-cap: "Laptime evolution over the race"
df %>%
  group_by(driver) %>%
  arrange(desc(laptime)) %>%
  filter(row_number() <= 6, laptime <= 120) %>%
  ggplot() +
  geom_boxplot(aes(x = round, y = laptime, group = round)) +
  geom_smooth(aes(x= round, y=laptime))
```

```{r}
#| label: fig-sector-evolution
#| fig-cap: "Sector time evolution over the race"
df %>%
  group_by(driver) %>%
  arrange(desc(laptime)) %>%
  filter(row_number() <= 6, laptime <= 120) %>%
  pivot_longer(c("Sector_1", "Sector_2", "Sector_3")) %>%
  ggplot(aes(x = value, y = round, group = interaction(round, name), fill=name)) +
  geom_density_ridges()
```


